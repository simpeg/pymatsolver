Search.setIndex({"alltitles": {"API": [[0, null]], "Basic Solvers": [[0, "basic-solvers"]], "Diagonal": [[0, "diagonal"]], "Direct Solvers": [[0, "direct-solvers"]], "Indices and tables": [[224, "indices-and-tables"]], "Installing Solvers": [[224, "installing-solvers"]], "Iterative Solvers": [[0, "iterative-solvers"]], "Mumps": [[224, "mumps"]], "Pardiso": [[224, "pardiso"]], "Solvers Available": [[224, "solvers-available"]], "Triangular": [[0, "triangular"]], "pymatsolver": [[224, null]], "pymatsolver.Backward": [[1, null]], "pymatsolver.Backward.A": [[2, null]], "pymatsolver.Backward.T": [[3, null]], "pymatsolver.Backward.__mul__": [[4, null]], "pymatsolver.Backward.check_accuracy": [[5, null]], "pymatsolver.Backward.check_atol": [[6, null]], "pymatsolver.Backward.check_rtol": [[7, null]], "pymatsolver.Backward.clean": [[8, null]], "pymatsolver.Backward.conj": [[9, null]], "pymatsolver.Backward.conjugate": [[10, null]], "pymatsolver.Backward.dtype": [[11, null]], "pymatsolver.Backward.get_attributes": [[12, null]], "pymatsolver.Backward.is_hermitian": [[13, null]], "pymatsolver.Backward.is_positive_definite": [[14, null]], "pymatsolver.Backward.is_real": [[15, null]], "pymatsolver.Backward.is_symmetric": [[16, null]], "pymatsolver.Backward.lower": [[17, null]], "pymatsolver.Backward.shape": [[18, null]], "pymatsolver.Backward.solve": [[19, null]], "pymatsolver.Backward.transpose": [[20, null]], "pymatsolver.BiCGJacobi": [[21, null]], "pymatsolver.BiCGJacobi.A": [[22, null]], "pymatsolver.BiCGJacobi.T": [[23, null]], "pymatsolver.BiCGJacobi.__mul__": [[24, null]], "pymatsolver.BiCGJacobi.atol": [[25, null]], "pymatsolver.BiCGJacobi.check_accuracy": [[26, null]], "pymatsolver.BiCGJacobi.check_atol": [[27, null]], "pymatsolver.BiCGJacobi.check_rtol": [[28, null]], "pymatsolver.BiCGJacobi.clean": [[29, null]], "pymatsolver.BiCGJacobi.conj": [[30, null]], "pymatsolver.BiCGJacobi.conjugate": [[31, null]], "pymatsolver.BiCGJacobi.dtype": [[32, null]], "pymatsolver.BiCGJacobi.factor": [[33, null]], "pymatsolver.BiCGJacobi.get_attributes": [[34, null]], "pymatsolver.BiCGJacobi.is_hermitian": [[35, null]], "pymatsolver.BiCGJacobi.is_positive_definite": [[36, null]], "pymatsolver.BiCGJacobi.is_real": [[37, null]], "pymatsolver.BiCGJacobi.is_symmetric": [[38, null]], "pymatsolver.BiCGJacobi.maxiter": [[39, null]], "pymatsolver.BiCGJacobi.rtol": [[40, null]], "pymatsolver.BiCGJacobi.shape": [[41, null]], "pymatsolver.BiCGJacobi.solve": [[42, null]], "pymatsolver.BiCGJacobi.transpose": [[43, null]], "pymatsolver.Diagonal": [[44, null]], "pymatsolver.Diagonal.A": [[45, null]], "pymatsolver.Diagonal.T": [[46, null]], "pymatsolver.Diagonal.__mul__": [[47, null]], "pymatsolver.Diagonal.check_accuracy": [[48, null]], "pymatsolver.Diagonal.check_atol": [[49, null]], "pymatsolver.Diagonal.check_rtol": [[50, null]], "pymatsolver.Diagonal.clean": [[51, null]], "pymatsolver.Diagonal.conj": [[52, null]], "pymatsolver.Diagonal.conjugate": [[53, null]], "pymatsolver.Diagonal.dtype": [[54, null]], "pymatsolver.Diagonal.get_attributes": [[55, null]], "pymatsolver.Diagonal.is_hermitian": [[56, null]], "pymatsolver.Diagonal.is_positive_definite": [[57, null]], "pymatsolver.Diagonal.is_real": [[58, null]], "pymatsolver.Diagonal.is_symmetric": [[59, null]], "pymatsolver.Diagonal.shape": [[60, null]], "pymatsolver.Diagonal.solve": [[61, null]], "pymatsolver.Diagonal.transpose": [[62, null]], "pymatsolver.Forward": [[63, null]], "pymatsolver.Forward.A": [[64, null]], "pymatsolver.Forward.T": [[65, null]], "pymatsolver.Forward.__mul__": [[66, null]], "pymatsolver.Forward.check_accuracy": [[67, null]], "pymatsolver.Forward.check_atol": [[68, null]], "pymatsolver.Forward.check_rtol": [[69, null]], "pymatsolver.Forward.clean": [[70, null]], "pymatsolver.Forward.conj": [[71, null]], "pymatsolver.Forward.conjugate": [[72, null]], "pymatsolver.Forward.dtype": [[73, null]], "pymatsolver.Forward.get_attributes": [[74, null]], "pymatsolver.Forward.is_hermitian": [[75, null]], "pymatsolver.Forward.is_positive_definite": [[76, null]], "pymatsolver.Forward.is_real": [[77, null]], "pymatsolver.Forward.is_symmetric": [[78, null]], "pymatsolver.Forward.lower": [[79, null]], "pymatsolver.Forward.shape": [[80, null]], "pymatsolver.Forward.solve": [[81, null]], "pymatsolver.Forward.transpose": [[82, null]], "pymatsolver.Mumps": [[83, null]], "pymatsolver.Mumps.A": [[84, null]], "pymatsolver.Mumps.T": [[85, null]], "pymatsolver.Mumps.__mul__": [[86, null]], "pymatsolver.Mumps.check_accuracy": [[87, null]], "pymatsolver.Mumps.check_atol": [[88, null]], "pymatsolver.Mumps.check_rtol": [[89, null]], "pymatsolver.Mumps.clean": [[90, null]], "pymatsolver.Mumps.conj": [[91, null]], "pymatsolver.Mumps.conjugate": [[92, null]], "pymatsolver.Mumps.dtype": [[93, null]], "pymatsolver.Mumps.factor": [[94, null]], "pymatsolver.Mumps.get_attributes": [[95, null]], "pymatsolver.Mumps.is_hermitian": [[96, null]], "pymatsolver.Mumps.is_positive_definite": [[97, null]], "pymatsolver.Mumps.is_real": [[98, null]], "pymatsolver.Mumps.is_symmetric": [[99, null]], "pymatsolver.Mumps.ordering": [[100, null]], "pymatsolver.Mumps.shape": [[101, null]], "pymatsolver.Mumps.solve": [[102, null]], "pymatsolver.Mumps.transpose": [[103, null]], "pymatsolver.Pardiso": [[104, null]], "pymatsolver.Pardiso.A": [[105, null]], "pymatsolver.Pardiso.T": [[106, null]], "pymatsolver.Pardiso.__mul__": [[107, null]], "pymatsolver.Pardiso.check_accuracy": [[108, null]], "pymatsolver.Pardiso.check_atol": [[109, null]], "pymatsolver.Pardiso.check_rtol": [[110, null]], "pymatsolver.Pardiso.clean": [[111, null]], "pymatsolver.Pardiso.conj": [[112, null]], "pymatsolver.Pardiso.conjugate": [[113, null]], "pymatsolver.Pardiso.dtype": [[114, null]], "pymatsolver.Pardiso.factor": [[115, null]], "pymatsolver.Pardiso.get_attributes": [[116, null]], "pymatsolver.Pardiso.is_hermitian": [[117, null]], "pymatsolver.Pardiso.is_positive_definite": [[118, null]], "pymatsolver.Pardiso.is_real": [[119, null]], "pymatsolver.Pardiso.is_symmetric": [[120, null]], "pymatsolver.Pardiso.n_threads": [[121, null]], "pymatsolver.Pardiso.shape": [[122, null]], "pymatsolver.Pardiso.solve": [[123, null]], "pymatsolver.Pardiso.transpose": [[124, null]], "pymatsolver.Solver": [[125, null]], "pymatsolver.Solver.A": [[126, null]], "pymatsolver.Solver.T": [[127, null]], "pymatsolver.Solver.__mul__": [[128, null]], "pymatsolver.Solver.check_accuracy": [[129, null]], "pymatsolver.Solver.check_atol": [[130, null]], "pymatsolver.Solver.check_rtol": [[131, null]], "pymatsolver.Solver.clean": [[132, null]], "pymatsolver.Solver.conj": [[133, null]], "pymatsolver.Solver.conjugate": [[134, null]], "pymatsolver.Solver.dtype": [[135, null]], "pymatsolver.Solver.get_attributes": [[136, null]], "pymatsolver.Solver.is_hermitian": [[137, null]], "pymatsolver.Solver.is_positive_definite": [[138, null]], "pymatsolver.Solver.is_real": [[139, null]], "pymatsolver.Solver.is_symmetric": [[140, null]], "pymatsolver.Solver.kwargs": [[141, null]], "pymatsolver.Solver.shape": [[142, null]], "pymatsolver.Solver.solve": [[143, null]], "pymatsolver.Solver.transpose": [[144, null]], "pymatsolver.SolverCG": [[145, null]], "pymatsolver.SolverCG.A": [[146, null]], "pymatsolver.SolverCG.T": [[147, null]], "pymatsolver.SolverCG.__mul__": [[148, null]], "pymatsolver.SolverCG.check_accuracy": [[149, null]], "pymatsolver.SolverCG.check_atol": [[150, null]], "pymatsolver.SolverCG.check_rtol": [[151, null]], "pymatsolver.SolverCG.clean": [[152, null]], "pymatsolver.SolverCG.conj": [[153, null]], "pymatsolver.SolverCG.conjugate": [[154, null]], "pymatsolver.SolverCG.dtype": [[155, null]], "pymatsolver.SolverCG.get_attributes": [[156, null]], "pymatsolver.SolverCG.is_hermitian": [[157, null]], "pymatsolver.SolverCG.is_positive_definite": [[158, null]], "pymatsolver.SolverCG.is_real": [[159, null]], "pymatsolver.SolverCG.is_symmetric": [[160, null]], "pymatsolver.SolverCG.kwargs": [[161, null]], "pymatsolver.SolverCG.shape": [[162, null]], "pymatsolver.SolverCG.solve": [[163, null]], "pymatsolver.SolverCG.transpose": [[164, null]], "pymatsolver.SolverLU": [[165, null]], "pymatsolver.SolverLU.A": [[166, null]], "pymatsolver.SolverLU.T": [[167, null]], "pymatsolver.SolverLU.__mul__": [[168, null]], "pymatsolver.SolverLU.check_accuracy": [[169, null]], "pymatsolver.SolverLU.check_atol": [[170, null]], "pymatsolver.SolverLU.check_rtol": [[171, null]], "pymatsolver.SolverLU.clean": [[172, null]], "pymatsolver.SolverLU.conj": [[173, null]], "pymatsolver.SolverLU.conjugate": [[174, null]], "pymatsolver.SolverLU.dtype": [[175, null]], "pymatsolver.SolverLU.get_attributes": [[176, null]], "pymatsolver.SolverLU.is_hermitian": [[177, null]], "pymatsolver.SolverLU.is_positive_definite": [[178, null]], "pymatsolver.SolverLU.is_real": [[179, null]], "pymatsolver.SolverLU.is_symmetric": [[180, null]], "pymatsolver.SolverLU.kwargs": [[181, null]], "pymatsolver.SolverLU.shape": [[182, null]], "pymatsolver.SolverLU.solve": [[183, null]], "pymatsolver.SolverLU.transpose": [[184, null]], "pymatsolver.Triangle": [[185, null]], "pymatsolver.Triangle.A": [[186, null]], "pymatsolver.Triangle.T": [[187, null]], "pymatsolver.Triangle.__mul__": [[188, null]], "pymatsolver.Triangle.check_accuracy": [[189, null]], "pymatsolver.Triangle.check_atol": [[190, null]], "pymatsolver.Triangle.check_rtol": [[191, null]], "pymatsolver.Triangle.clean": [[192, null]], "pymatsolver.Triangle.conj": [[193, null]], "pymatsolver.Triangle.conjugate": [[194, null]], "pymatsolver.Triangle.dtype": [[195, null]], "pymatsolver.Triangle.get_attributes": [[196, null]], "pymatsolver.Triangle.is_hermitian": [[197, null]], "pymatsolver.Triangle.is_positive_definite": [[198, null]], "pymatsolver.Triangle.is_real": [[199, null]], "pymatsolver.Triangle.is_symmetric": [[200, null]], "pymatsolver.Triangle.lower": [[201, null]], "pymatsolver.Triangle.shape": [[202, null]], "pymatsolver.Triangle.solve": [[203, null]], "pymatsolver.Triangle.transpose": [[204, null]], "pymatsolver.solvers.Base": [[205, null]], "pymatsolver.solvers.Base.A": [[206, null]], "pymatsolver.solvers.Base.T": [[207, null]], "pymatsolver.solvers.Base.__mul__": [[208, null]], "pymatsolver.solvers.Base.check_accuracy": [[209, null]], "pymatsolver.solvers.Base.check_atol": [[210, null]], "pymatsolver.solvers.Base.check_rtol": [[211, null]], "pymatsolver.solvers.Base.clean": [[212, null]], "pymatsolver.solvers.Base.conj": [[213, null]], "pymatsolver.solvers.Base.conjugate": [[214, null]], "pymatsolver.solvers.Base.dtype": [[215, null]], "pymatsolver.solvers.Base.get_attributes": [[216, null]], "pymatsolver.solvers.Base.is_hermitian": [[217, null]], "pymatsolver.solvers.Base.is_positive_definite": [[218, null]], "pymatsolver.solvers.Base.is_real": [[219, null]], "pymatsolver.solvers.Base.is_symmetric": [[220, null]], "pymatsolver.solvers.Base.shape": [[221, null]], "pymatsolver.solvers.Base.solve": [[222, null]], "pymatsolver.solvers.Base.transpose": [[223, null]]}, "docnames": ["api", "generated/pymatsolver.Backward", "generated/pymatsolver.Backward.A", "generated/pymatsolver.Backward.T", "generated/pymatsolver.Backward.__mul__", "generated/pymatsolver.Backward.check_accuracy", "generated/pymatsolver.Backward.check_atol", "generated/pymatsolver.Backward.check_rtol", "generated/pymatsolver.Backward.clean", "generated/pymatsolver.Backward.conj", "generated/pymatsolver.Backward.conjugate", "generated/pymatsolver.Backward.dtype", "generated/pymatsolver.Backward.get_attributes", "generated/pymatsolver.Backward.is_hermitian", "generated/pymatsolver.Backward.is_positive_definite", "generated/pymatsolver.Backward.is_real", "generated/pymatsolver.Backward.is_symmetric", "generated/pymatsolver.Backward.lower", "generated/pymatsolver.Backward.shape", "generated/pymatsolver.Backward.solve", "generated/pymatsolver.Backward.transpose", "generated/pymatsolver.BiCGJacobi", "generated/pymatsolver.BiCGJacobi.A", "generated/pymatsolver.BiCGJacobi.T", "generated/pymatsolver.BiCGJacobi.__mul__", "generated/pymatsolver.BiCGJacobi.atol", "generated/pymatsolver.BiCGJacobi.check_accuracy", "generated/pymatsolver.BiCGJacobi.check_atol", "generated/pymatsolver.BiCGJacobi.check_rtol", "generated/pymatsolver.BiCGJacobi.clean", "generated/pymatsolver.BiCGJacobi.conj", "generated/pymatsolver.BiCGJacobi.conjugate", "generated/pymatsolver.BiCGJacobi.dtype", "generated/pymatsolver.BiCGJacobi.factor", "generated/pymatsolver.BiCGJacobi.get_attributes", "generated/pymatsolver.BiCGJacobi.is_hermitian", "generated/pymatsolver.BiCGJacobi.is_positive_definite", "generated/pymatsolver.BiCGJacobi.is_real", "generated/pymatsolver.BiCGJacobi.is_symmetric", "generated/pymatsolver.BiCGJacobi.maxiter", "generated/pymatsolver.BiCGJacobi.rtol", "generated/pymatsolver.BiCGJacobi.shape", "generated/pymatsolver.BiCGJacobi.solve", "generated/pymatsolver.BiCGJacobi.transpose", "generated/pymatsolver.Diagonal", "generated/pymatsolver.Diagonal.A", "generated/pymatsolver.Diagonal.T", "generated/pymatsolver.Diagonal.__mul__", "generated/pymatsolver.Diagonal.check_accuracy", "generated/pymatsolver.Diagonal.check_atol", "generated/pymatsolver.Diagonal.check_rtol", "generated/pymatsolver.Diagonal.clean", "generated/pymatsolver.Diagonal.conj", "generated/pymatsolver.Diagonal.conjugate", "generated/pymatsolver.Diagonal.dtype", "generated/pymatsolver.Diagonal.get_attributes", "generated/pymatsolver.Diagonal.is_hermitian", "generated/pymatsolver.Diagonal.is_positive_definite", "generated/pymatsolver.Diagonal.is_real", "generated/pymatsolver.Diagonal.is_symmetric", "generated/pymatsolver.Diagonal.shape", "generated/pymatsolver.Diagonal.solve", "generated/pymatsolver.Diagonal.transpose", "generated/pymatsolver.Forward", "generated/pymatsolver.Forward.A", "generated/pymatsolver.Forward.T", "generated/pymatsolver.Forward.__mul__", "generated/pymatsolver.Forward.check_accuracy", "generated/pymatsolver.Forward.check_atol", "generated/pymatsolver.Forward.check_rtol", "generated/pymatsolver.Forward.clean", "generated/pymatsolver.Forward.conj", "generated/pymatsolver.Forward.conjugate", "generated/pymatsolver.Forward.dtype", "generated/pymatsolver.Forward.get_attributes", "generated/pymatsolver.Forward.is_hermitian", "generated/pymatsolver.Forward.is_positive_definite", "generated/pymatsolver.Forward.is_real", "generated/pymatsolver.Forward.is_symmetric", "generated/pymatsolver.Forward.lower", "generated/pymatsolver.Forward.shape", "generated/pymatsolver.Forward.solve", "generated/pymatsolver.Forward.transpose", "generated/pymatsolver.Mumps", "generated/pymatsolver.Mumps.A", "generated/pymatsolver.Mumps.T", "generated/pymatsolver.Mumps.__mul__", "generated/pymatsolver.Mumps.check_accuracy", "generated/pymatsolver.Mumps.check_atol", "generated/pymatsolver.Mumps.check_rtol", "generated/pymatsolver.Mumps.clean", "generated/pymatsolver.Mumps.conj", "generated/pymatsolver.Mumps.conjugate", "generated/pymatsolver.Mumps.dtype", "generated/pymatsolver.Mumps.factor", "generated/pymatsolver.Mumps.get_attributes", "generated/pymatsolver.Mumps.is_hermitian", "generated/pymatsolver.Mumps.is_positive_definite", "generated/pymatsolver.Mumps.is_real", "generated/pymatsolver.Mumps.is_symmetric", "generated/pymatsolver.Mumps.ordering", "generated/pymatsolver.Mumps.shape", "generated/pymatsolver.Mumps.solve", "generated/pymatsolver.Mumps.transpose", "generated/pymatsolver.Pardiso", "generated/pymatsolver.Pardiso.A", "generated/pymatsolver.Pardiso.T", "generated/pymatsolver.Pardiso.__mul__", "generated/pymatsolver.Pardiso.check_accuracy", "generated/pymatsolver.Pardiso.check_atol", "generated/pymatsolver.Pardiso.check_rtol", "generated/pymatsolver.Pardiso.clean", "generated/pymatsolver.Pardiso.conj", "generated/pymatsolver.Pardiso.conjugate", "generated/pymatsolver.Pardiso.dtype", "generated/pymatsolver.Pardiso.factor", "generated/pymatsolver.Pardiso.get_attributes", "generated/pymatsolver.Pardiso.is_hermitian", "generated/pymatsolver.Pardiso.is_positive_definite", "generated/pymatsolver.Pardiso.is_real", "generated/pymatsolver.Pardiso.is_symmetric", "generated/pymatsolver.Pardiso.n_threads", "generated/pymatsolver.Pardiso.shape", "generated/pymatsolver.Pardiso.solve", "generated/pymatsolver.Pardiso.transpose", "generated/pymatsolver.Solver", "generated/pymatsolver.Solver.A", "generated/pymatsolver.Solver.T", "generated/pymatsolver.Solver.__mul__", "generated/pymatsolver.Solver.check_accuracy", "generated/pymatsolver.Solver.check_atol", "generated/pymatsolver.Solver.check_rtol", "generated/pymatsolver.Solver.clean", "generated/pymatsolver.Solver.conj", "generated/pymatsolver.Solver.conjugate", "generated/pymatsolver.Solver.dtype", "generated/pymatsolver.Solver.get_attributes", "generated/pymatsolver.Solver.is_hermitian", "generated/pymatsolver.Solver.is_positive_definite", "generated/pymatsolver.Solver.is_real", "generated/pymatsolver.Solver.is_symmetric", "generated/pymatsolver.Solver.kwargs", "generated/pymatsolver.Solver.shape", "generated/pymatsolver.Solver.solve", "generated/pymatsolver.Solver.transpose", "generated/pymatsolver.SolverCG", "generated/pymatsolver.SolverCG.A", "generated/pymatsolver.SolverCG.T", "generated/pymatsolver.SolverCG.__mul__", "generated/pymatsolver.SolverCG.check_accuracy", "generated/pymatsolver.SolverCG.check_atol", "generated/pymatsolver.SolverCG.check_rtol", "generated/pymatsolver.SolverCG.clean", "generated/pymatsolver.SolverCG.conj", "generated/pymatsolver.SolverCG.conjugate", "generated/pymatsolver.SolverCG.dtype", "generated/pymatsolver.SolverCG.get_attributes", "generated/pymatsolver.SolverCG.is_hermitian", "generated/pymatsolver.SolverCG.is_positive_definite", "generated/pymatsolver.SolverCG.is_real", "generated/pymatsolver.SolverCG.is_symmetric", "generated/pymatsolver.SolverCG.kwargs", "generated/pymatsolver.SolverCG.shape", "generated/pymatsolver.SolverCG.solve", "generated/pymatsolver.SolverCG.transpose", "generated/pymatsolver.SolverLU", "generated/pymatsolver.SolverLU.A", "generated/pymatsolver.SolverLU.T", "generated/pymatsolver.SolverLU.__mul__", "generated/pymatsolver.SolverLU.check_accuracy", "generated/pymatsolver.SolverLU.check_atol", "generated/pymatsolver.SolverLU.check_rtol", "generated/pymatsolver.SolverLU.clean", "generated/pymatsolver.SolverLU.conj", "generated/pymatsolver.SolverLU.conjugate", "generated/pymatsolver.SolverLU.dtype", "generated/pymatsolver.SolverLU.get_attributes", "generated/pymatsolver.SolverLU.is_hermitian", "generated/pymatsolver.SolverLU.is_positive_definite", "generated/pymatsolver.SolverLU.is_real", "generated/pymatsolver.SolverLU.is_symmetric", "generated/pymatsolver.SolverLU.kwargs", "generated/pymatsolver.SolverLU.shape", "generated/pymatsolver.SolverLU.solve", "generated/pymatsolver.SolverLU.transpose", "generated/pymatsolver.Triangle", "generated/pymatsolver.Triangle.A", "generated/pymatsolver.Triangle.T", "generated/pymatsolver.Triangle.__mul__", "generated/pymatsolver.Triangle.check_accuracy", "generated/pymatsolver.Triangle.check_atol", "generated/pymatsolver.Triangle.check_rtol", "generated/pymatsolver.Triangle.clean", "generated/pymatsolver.Triangle.conj", "generated/pymatsolver.Triangle.conjugate", "generated/pymatsolver.Triangle.dtype", "generated/pymatsolver.Triangle.get_attributes", "generated/pymatsolver.Triangle.is_hermitian", "generated/pymatsolver.Triangle.is_positive_definite", "generated/pymatsolver.Triangle.is_real", "generated/pymatsolver.Triangle.is_symmetric", "generated/pymatsolver.Triangle.lower", "generated/pymatsolver.Triangle.shape", "generated/pymatsolver.Triangle.solve", "generated/pymatsolver.Triangle.transpose", "generated/pymatsolver.solvers.Base", "generated/pymatsolver.solvers.Base.A", "generated/pymatsolver.solvers.Base.T", "generated/pymatsolver.solvers.Base.__mul__", "generated/pymatsolver.solvers.Base.check_accuracy", "generated/pymatsolver.solvers.Base.check_atol", "generated/pymatsolver.solvers.Base.check_rtol", "generated/pymatsolver.solvers.Base.clean", "generated/pymatsolver.solvers.Base.conj", "generated/pymatsolver.solvers.Base.conjugate", "generated/pymatsolver.solvers.Base.dtype", "generated/pymatsolver.solvers.Base.get_attributes", "generated/pymatsolver.solvers.Base.is_hermitian", "generated/pymatsolver.solvers.Base.is_positive_definite", "generated/pymatsolver.solvers.Base.is_real", "generated/pymatsolver.solvers.Base.is_symmetric", "generated/pymatsolver.solvers.Base.shape", "generated/pymatsolver.solvers.Base.solve", "generated/pymatsolver.solvers.Base.transpose", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "generated/pymatsolver.Backward.rst", "generated/pymatsolver.Backward.A.rst", "generated/pymatsolver.Backward.T.rst", "generated/pymatsolver.Backward.__mul__.rst", "generated/pymatsolver.Backward.check_accuracy.rst", "generated/pymatsolver.Backward.check_atol.rst", "generated/pymatsolver.Backward.check_rtol.rst", "generated/pymatsolver.Backward.clean.rst", "generated/pymatsolver.Backward.conj.rst", "generated/pymatsolver.Backward.conjugate.rst", "generated/pymatsolver.Backward.dtype.rst", "generated/pymatsolver.Backward.get_attributes.rst", "generated/pymatsolver.Backward.is_hermitian.rst", "generated/pymatsolver.Backward.is_positive_definite.rst", "generated/pymatsolver.Backward.is_real.rst", "generated/pymatsolver.Backward.is_symmetric.rst", "generated/pymatsolver.Backward.lower.rst", "generated/pymatsolver.Backward.shape.rst", "generated/pymatsolver.Backward.solve.rst", "generated/pymatsolver.Backward.transpose.rst", "generated/pymatsolver.BiCGJacobi.rst", "generated/pymatsolver.BiCGJacobi.A.rst", "generated/pymatsolver.BiCGJacobi.T.rst", "generated/pymatsolver.BiCGJacobi.__mul__.rst", "generated/pymatsolver.BiCGJacobi.atol.rst", "generated/pymatsolver.BiCGJacobi.check_accuracy.rst", "generated/pymatsolver.BiCGJacobi.check_atol.rst", "generated/pymatsolver.BiCGJacobi.check_rtol.rst", "generated/pymatsolver.BiCGJacobi.clean.rst", "generated/pymatsolver.BiCGJacobi.conj.rst", "generated/pymatsolver.BiCGJacobi.conjugate.rst", "generated/pymatsolver.BiCGJacobi.dtype.rst", "generated/pymatsolver.BiCGJacobi.factor.rst", "generated/pymatsolver.BiCGJacobi.get_attributes.rst", "generated/pymatsolver.BiCGJacobi.is_hermitian.rst", "generated/pymatsolver.BiCGJacobi.is_positive_definite.rst", "generated/pymatsolver.BiCGJacobi.is_real.rst", "generated/pymatsolver.BiCGJacobi.is_symmetric.rst", "generated/pymatsolver.BiCGJacobi.maxiter.rst", "generated/pymatsolver.BiCGJacobi.rtol.rst", "generated/pymatsolver.BiCGJacobi.shape.rst", "generated/pymatsolver.BiCGJacobi.solve.rst", "generated/pymatsolver.BiCGJacobi.transpose.rst", "generated/pymatsolver.Diagonal.rst", "generated/pymatsolver.Diagonal.A.rst", "generated/pymatsolver.Diagonal.T.rst", "generated/pymatsolver.Diagonal.__mul__.rst", "generated/pymatsolver.Diagonal.check_accuracy.rst", "generated/pymatsolver.Diagonal.check_atol.rst", "generated/pymatsolver.Diagonal.check_rtol.rst", "generated/pymatsolver.Diagonal.clean.rst", "generated/pymatsolver.Diagonal.conj.rst", "generated/pymatsolver.Diagonal.conjugate.rst", "generated/pymatsolver.Diagonal.dtype.rst", "generated/pymatsolver.Diagonal.get_attributes.rst", "generated/pymatsolver.Diagonal.is_hermitian.rst", "generated/pymatsolver.Diagonal.is_positive_definite.rst", "generated/pymatsolver.Diagonal.is_real.rst", "generated/pymatsolver.Diagonal.is_symmetric.rst", "generated/pymatsolver.Diagonal.shape.rst", "generated/pymatsolver.Diagonal.solve.rst", "generated/pymatsolver.Diagonal.transpose.rst", "generated/pymatsolver.Forward.rst", "generated/pymatsolver.Forward.A.rst", "generated/pymatsolver.Forward.T.rst", "generated/pymatsolver.Forward.__mul__.rst", "generated/pymatsolver.Forward.check_accuracy.rst", "generated/pymatsolver.Forward.check_atol.rst", "generated/pymatsolver.Forward.check_rtol.rst", "generated/pymatsolver.Forward.clean.rst", "generated/pymatsolver.Forward.conj.rst", "generated/pymatsolver.Forward.conjugate.rst", "generated/pymatsolver.Forward.dtype.rst", "generated/pymatsolver.Forward.get_attributes.rst", "generated/pymatsolver.Forward.is_hermitian.rst", "generated/pymatsolver.Forward.is_positive_definite.rst", "generated/pymatsolver.Forward.is_real.rst", "generated/pymatsolver.Forward.is_symmetric.rst", "generated/pymatsolver.Forward.lower.rst", "generated/pymatsolver.Forward.shape.rst", "generated/pymatsolver.Forward.solve.rst", "generated/pymatsolver.Forward.transpose.rst", "generated/pymatsolver.Mumps.rst", "generated/pymatsolver.Mumps.A.rst", "generated/pymatsolver.Mumps.T.rst", "generated/pymatsolver.Mumps.__mul__.rst", "generated/pymatsolver.Mumps.check_accuracy.rst", "generated/pymatsolver.Mumps.check_atol.rst", "generated/pymatsolver.Mumps.check_rtol.rst", "generated/pymatsolver.Mumps.clean.rst", "generated/pymatsolver.Mumps.conj.rst", "generated/pymatsolver.Mumps.conjugate.rst", "generated/pymatsolver.Mumps.dtype.rst", "generated/pymatsolver.Mumps.factor.rst", "generated/pymatsolver.Mumps.get_attributes.rst", "generated/pymatsolver.Mumps.is_hermitian.rst", "generated/pymatsolver.Mumps.is_positive_definite.rst", "generated/pymatsolver.Mumps.is_real.rst", "generated/pymatsolver.Mumps.is_symmetric.rst", "generated/pymatsolver.Mumps.ordering.rst", "generated/pymatsolver.Mumps.shape.rst", "generated/pymatsolver.Mumps.solve.rst", "generated/pymatsolver.Mumps.transpose.rst", "generated/pymatsolver.Pardiso.rst", "generated/pymatsolver.Pardiso.A.rst", "generated/pymatsolver.Pardiso.T.rst", "generated/pymatsolver.Pardiso.__mul__.rst", "generated/pymatsolver.Pardiso.check_accuracy.rst", "generated/pymatsolver.Pardiso.check_atol.rst", "generated/pymatsolver.Pardiso.check_rtol.rst", "generated/pymatsolver.Pardiso.clean.rst", "generated/pymatsolver.Pardiso.conj.rst", "generated/pymatsolver.Pardiso.conjugate.rst", "generated/pymatsolver.Pardiso.dtype.rst", "generated/pymatsolver.Pardiso.factor.rst", "generated/pymatsolver.Pardiso.get_attributes.rst", "generated/pymatsolver.Pardiso.is_hermitian.rst", "generated/pymatsolver.Pardiso.is_positive_definite.rst", "generated/pymatsolver.Pardiso.is_real.rst", "generated/pymatsolver.Pardiso.is_symmetric.rst", "generated/pymatsolver.Pardiso.n_threads.rst", "generated/pymatsolver.Pardiso.shape.rst", "generated/pymatsolver.Pardiso.solve.rst", "generated/pymatsolver.Pardiso.transpose.rst", "generated/pymatsolver.Solver.rst", "generated/pymatsolver.Solver.A.rst", "generated/pymatsolver.Solver.T.rst", "generated/pymatsolver.Solver.__mul__.rst", "generated/pymatsolver.Solver.check_accuracy.rst", "generated/pymatsolver.Solver.check_atol.rst", "generated/pymatsolver.Solver.check_rtol.rst", "generated/pymatsolver.Solver.clean.rst", "generated/pymatsolver.Solver.conj.rst", "generated/pymatsolver.Solver.conjugate.rst", "generated/pymatsolver.Solver.dtype.rst", "generated/pymatsolver.Solver.get_attributes.rst", "generated/pymatsolver.Solver.is_hermitian.rst", "generated/pymatsolver.Solver.is_positive_definite.rst", "generated/pymatsolver.Solver.is_real.rst", "generated/pymatsolver.Solver.is_symmetric.rst", "generated/pymatsolver.Solver.kwargs.rst", "generated/pymatsolver.Solver.shape.rst", "generated/pymatsolver.Solver.solve.rst", "generated/pymatsolver.Solver.transpose.rst", "generated/pymatsolver.SolverCG.rst", "generated/pymatsolver.SolverCG.A.rst", "generated/pymatsolver.SolverCG.T.rst", "generated/pymatsolver.SolverCG.__mul__.rst", "generated/pymatsolver.SolverCG.check_accuracy.rst", "generated/pymatsolver.SolverCG.check_atol.rst", "generated/pymatsolver.SolverCG.check_rtol.rst", "generated/pymatsolver.SolverCG.clean.rst", "generated/pymatsolver.SolverCG.conj.rst", "generated/pymatsolver.SolverCG.conjugate.rst", "generated/pymatsolver.SolverCG.dtype.rst", "generated/pymatsolver.SolverCG.get_attributes.rst", "generated/pymatsolver.SolverCG.is_hermitian.rst", "generated/pymatsolver.SolverCG.is_positive_definite.rst", "generated/pymatsolver.SolverCG.is_real.rst", "generated/pymatsolver.SolverCG.is_symmetric.rst", "generated/pymatsolver.SolverCG.kwargs.rst", "generated/pymatsolver.SolverCG.shape.rst", "generated/pymatsolver.SolverCG.solve.rst", "generated/pymatsolver.SolverCG.transpose.rst", "generated/pymatsolver.SolverLU.rst", "generated/pymatsolver.SolverLU.A.rst", "generated/pymatsolver.SolverLU.T.rst", "generated/pymatsolver.SolverLU.__mul__.rst", "generated/pymatsolver.SolverLU.check_accuracy.rst", "generated/pymatsolver.SolverLU.check_atol.rst", "generated/pymatsolver.SolverLU.check_rtol.rst", "generated/pymatsolver.SolverLU.clean.rst", "generated/pymatsolver.SolverLU.conj.rst", "generated/pymatsolver.SolverLU.conjugate.rst", "generated/pymatsolver.SolverLU.dtype.rst", "generated/pymatsolver.SolverLU.get_attributes.rst", "generated/pymatsolver.SolverLU.is_hermitian.rst", "generated/pymatsolver.SolverLU.is_positive_definite.rst", "generated/pymatsolver.SolverLU.is_real.rst", "generated/pymatsolver.SolverLU.is_symmetric.rst", "generated/pymatsolver.SolverLU.kwargs.rst", "generated/pymatsolver.SolverLU.shape.rst", "generated/pymatsolver.SolverLU.solve.rst", "generated/pymatsolver.SolverLU.transpose.rst", "generated/pymatsolver.Triangle.rst", "generated/pymatsolver.Triangle.A.rst", "generated/pymatsolver.Triangle.T.rst", "generated/pymatsolver.Triangle.__mul__.rst", "generated/pymatsolver.Triangle.check_accuracy.rst", "generated/pymatsolver.Triangle.check_atol.rst", "generated/pymatsolver.Triangle.check_rtol.rst", "generated/pymatsolver.Triangle.clean.rst", "generated/pymatsolver.Triangle.conj.rst", "generated/pymatsolver.Triangle.conjugate.rst", "generated/pymatsolver.Triangle.dtype.rst", "generated/pymatsolver.Triangle.get_attributes.rst", "generated/pymatsolver.Triangle.is_hermitian.rst", "generated/pymatsolver.Triangle.is_positive_definite.rst", "generated/pymatsolver.Triangle.is_real.rst", "generated/pymatsolver.Triangle.is_symmetric.rst", "generated/pymatsolver.Triangle.lower.rst", "generated/pymatsolver.Triangle.shape.rst", "generated/pymatsolver.Triangle.solve.rst", "generated/pymatsolver.Triangle.transpose.rst", "generated/pymatsolver.solvers.Base.rst", "generated/pymatsolver.solvers.Base.A.rst", "generated/pymatsolver.solvers.Base.T.rst", "generated/pymatsolver.solvers.Base.__mul__.rst", "generated/pymatsolver.solvers.Base.check_accuracy.rst", "generated/pymatsolver.solvers.Base.check_atol.rst", "generated/pymatsolver.solvers.Base.check_rtol.rst", "generated/pymatsolver.solvers.Base.clean.rst", "generated/pymatsolver.solvers.Base.conj.rst", "generated/pymatsolver.solvers.Base.conjugate.rst", "generated/pymatsolver.solvers.Base.dtype.rst", "generated/pymatsolver.solvers.Base.get_attributes.rst", "generated/pymatsolver.solvers.Base.is_hermitian.rst", "generated/pymatsolver.solvers.Base.is_positive_definite.rst", "generated/pymatsolver.solvers.Base.is_real.rst", "generated/pymatsolver.solvers.Base.is_symmetric.rst", "generated/pymatsolver.solvers.Base.shape.rst", "generated/pymatsolver.solvers.Base.solve.rst", "generated/pymatsolver.solvers.Base.transpose.rst", "index.rst"], "indexentries": {"__mul__() (pymatsolver.backward method)": [[4, "pymatsolver.Backward.__mul__", false]], "__mul__() (pymatsolver.bicgjacobi method)": [[24, "pymatsolver.BiCGJacobi.__mul__", false]], "__mul__() (pymatsolver.diagonal method)": [[47, "pymatsolver.Diagonal.__mul__", false]], "__mul__() (pymatsolver.forward method)": [[66, "pymatsolver.Forward.__mul__", false]], "__mul__() (pymatsolver.mumps method)": [[86, "pymatsolver.Mumps.__mul__", false]], "__mul__() (pymatsolver.pardiso method)": [[107, "pymatsolver.Pardiso.__mul__", false]], "__mul__() (pymatsolver.solver method)": [[128, "pymatsolver.Solver.__mul__", false]], "__mul__() (pymatsolver.solvercg method)": [[148, "pymatsolver.SolverCG.__mul__", false]], "__mul__() (pymatsolver.solverlu method)": [[168, "pymatsolver.SolverLU.__mul__", false]], "__mul__() (pymatsolver.solvers.base method)": [[208, "pymatsolver.solvers.Base.__mul__", false]], "__mul__() (pymatsolver.triangle method)": [[188, "pymatsolver.Triangle.__mul__", false]], "a (pymatsolver.backward property)": [[2, "pymatsolver.Backward.A", false]], "a (pymatsolver.bicgjacobi property)": [[22, "pymatsolver.BiCGJacobi.A", false]], "a (pymatsolver.diagonal property)": [[45, "pymatsolver.Diagonal.A", false]], "a (pymatsolver.forward property)": [[64, "pymatsolver.Forward.A", false]], "a (pymatsolver.mumps property)": [[84, "pymatsolver.Mumps.A", false]], "a (pymatsolver.pardiso property)": [[105, "pymatsolver.Pardiso.A", false]], "a (pymatsolver.solver property)": [[126, "pymatsolver.Solver.A", false]], "a (pymatsolver.solvercg property)": [[146, "pymatsolver.SolverCG.A", false]], "a (pymatsolver.solverlu property)": [[166, "pymatsolver.SolverLU.A", false]], "a (pymatsolver.solvers.base property)": [[206, "pymatsolver.solvers.Base.A", false]], "a (pymatsolver.triangle property)": [[186, "pymatsolver.Triangle.A", false]], "atol (pymatsolver.bicgjacobi property)": [[25, "pymatsolver.BiCGJacobi.atol", false]], "backward (class in pymatsolver)": [[1, "pymatsolver.Backward", false]], "base (class in pymatsolver.solvers)": [[205, "pymatsolver.solvers.Base", false]], "bicgjacobi (class in pymatsolver)": [[21, "pymatsolver.BiCGJacobi", false]], "check_accuracy (pymatsolver.backward property)": [[5, "pymatsolver.Backward.check_accuracy", false]], "check_accuracy (pymatsolver.bicgjacobi property)": [[26, "pymatsolver.BiCGJacobi.check_accuracy", false]], "check_accuracy (pymatsolver.diagonal property)": [[48, "pymatsolver.Diagonal.check_accuracy", false]], "check_accuracy (pymatsolver.forward property)": [[67, "pymatsolver.Forward.check_accuracy", false]], "check_accuracy (pymatsolver.mumps property)": [[87, "pymatsolver.Mumps.check_accuracy", false]], "check_accuracy (pymatsolver.pardiso property)": [[108, "pymatsolver.Pardiso.check_accuracy", false]], "check_accuracy (pymatsolver.solver property)": [[129, "pymatsolver.Solver.check_accuracy", false]], "check_accuracy (pymatsolver.solvercg property)": [[149, "pymatsolver.SolverCG.check_accuracy", false]], "check_accuracy (pymatsolver.solverlu property)": [[169, "pymatsolver.SolverLU.check_accuracy", false]], "check_accuracy (pymatsolver.solvers.base property)": [[209, "pymatsolver.solvers.Base.check_accuracy", false]], "check_accuracy (pymatsolver.triangle property)": [[189, "pymatsolver.Triangle.check_accuracy", false]], "check_atol (pymatsolver.backward property)": [[6, "pymatsolver.Backward.check_atol", false]], "check_atol (pymatsolver.bicgjacobi property)": [[27, "pymatsolver.BiCGJacobi.check_atol", false]], "check_atol (pymatsolver.diagonal property)": [[49, "pymatsolver.Diagonal.check_atol", false]], "check_atol (pymatsolver.forward property)": [[68, "pymatsolver.Forward.check_atol", false]], "check_atol (pymatsolver.mumps property)": [[88, "pymatsolver.Mumps.check_atol", false]], "check_atol (pymatsolver.pardiso property)": [[109, "pymatsolver.Pardiso.check_atol", false]], "check_atol (pymatsolver.solver property)": [[130, "pymatsolver.Solver.check_atol", false]], "check_atol (pymatsolver.solvercg property)": [[150, "pymatsolver.SolverCG.check_atol", false]], "check_atol (pymatsolver.solverlu property)": [[170, "pymatsolver.SolverLU.check_atol", false]], "check_atol (pymatsolver.solvers.base property)": [[210, "pymatsolver.solvers.Base.check_atol", false]], "check_atol (pymatsolver.triangle property)": [[190, "pymatsolver.Triangle.check_atol", false]], "check_rtol (pymatsolver.backward property)": [[7, "pymatsolver.Backward.check_rtol", false]], "check_rtol (pymatsolver.bicgjacobi property)": [[28, "pymatsolver.BiCGJacobi.check_rtol", false]], "check_rtol (pymatsolver.diagonal property)": [[50, "pymatsolver.Diagonal.check_rtol", false]], "check_rtol (pymatsolver.forward property)": [[69, "pymatsolver.Forward.check_rtol", false]], "check_rtol (pymatsolver.mumps property)": [[89, "pymatsolver.Mumps.check_rtol", false]], "check_rtol (pymatsolver.pardiso property)": [[110, "pymatsolver.Pardiso.check_rtol", false]], "check_rtol (pymatsolver.solver property)": [[131, "pymatsolver.Solver.check_rtol", false]], "check_rtol (pymatsolver.solvercg property)": [[151, "pymatsolver.SolverCG.check_rtol", false]], "check_rtol (pymatsolver.solverlu property)": [[171, "pymatsolver.SolverLU.check_rtol", false]], "check_rtol (pymatsolver.solvers.base property)": [[211, "pymatsolver.solvers.Base.check_rtol", false]], "check_rtol (pymatsolver.triangle property)": [[191, "pymatsolver.Triangle.check_rtol", false]], "clean() (pymatsolver.backward method)": [[8, "pymatsolver.Backward.clean", false]], "clean() (pymatsolver.bicgjacobi method)": [[29, "pymatsolver.BiCGJacobi.clean", false]], "clean() (pymatsolver.diagonal method)": [[51, "pymatsolver.Diagonal.clean", false]], "clean() (pymatsolver.forward method)": [[70, "pymatsolver.Forward.clean", false]], "clean() (pymatsolver.mumps method)": [[90, "pymatsolver.Mumps.clean", false]], "clean() (pymatsolver.pardiso method)": [[111, "pymatsolver.Pardiso.clean", false]], "clean() (pymatsolver.solver method)": [[132, "pymatsolver.Solver.clean", false]], "clean() (pymatsolver.solvercg method)": [[152, "pymatsolver.SolverCG.clean", false]], "clean() (pymatsolver.solverlu method)": [[172, "pymatsolver.SolverLU.clean", false]], "clean() (pymatsolver.solvers.base method)": [[212, "pymatsolver.solvers.Base.clean", false]], "clean() (pymatsolver.triangle method)": [[192, "pymatsolver.Triangle.clean", false]], "conj() (pymatsolver.backward method)": [[9, "pymatsolver.Backward.conj", false]], "conj() (pymatsolver.bicgjacobi method)": [[30, "pymatsolver.BiCGJacobi.conj", false]], "conj() (pymatsolver.diagonal method)": [[52, "pymatsolver.Diagonal.conj", false]], "conj() (pymatsolver.forward method)": [[71, "pymatsolver.Forward.conj", false]], "conj() (pymatsolver.mumps method)": [[91, "pymatsolver.Mumps.conj", false]], "conj() (pymatsolver.pardiso method)": [[112, "pymatsolver.Pardiso.conj", false]], "conj() (pymatsolver.solver method)": [[133, "pymatsolver.Solver.conj", false]], "conj() (pymatsolver.solvercg method)": [[153, "pymatsolver.SolverCG.conj", false]], "conj() (pymatsolver.solverlu method)": [[173, "pymatsolver.SolverLU.conj", false]], "conj() (pymatsolver.solvers.base method)": [[213, "pymatsolver.solvers.Base.conj", false]], "conj() (pymatsolver.triangle method)": [[193, "pymatsolver.Triangle.conj", false]], "conjugate() (pymatsolver.backward method)": [[10, "pymatsolver.Backward.conjugate", false]], "conjugate() (pymatsolver.bicgjacobi method)": [[31, "pymatsolver.BiCGJacobi.conjugate", false]], "conjugate() (pymatsolver.diagonal method)": [[53, "pymatsolver.Diagonal.conjugate", false]], "conjugate() (pymatsolver.forward method)": [[72, "pymatsolver.Forward.conjugate", false]], "conjugate() (pymatsolver.mumps method)": [[92, "pymatsolver.Mumps.conjugate", false]], "conjugate() (pymatsolver.pardiso method)": [[113, "pymatsolver.Pardiso.conjugate", false]], "conjugate() (pymatsolver.solver method)": [[134, "pymatsolver.Solver.conjugate", false]], "conjugate() (pymatsolver.solvercg method)": [[154, "pymatsolver.SolverCG.conjugate", false]], "conjugate() (pymatsolver.solverlu method)": [[174, "pymatsolver.SolverLU.conjugate", false]], "conjugate() (pymatsolver.solvers.base method)": [[214, "pymatsolver.solvers.Base.conjugate", false]], "conjugate() (pymatsolver.triangle method)": [[194, "pymatsolver.Triangle.conjugate", false]], "diagonal (class in pymatsolver)": [[44, "pymatsolver.Diagonal", false]], "dtype (pymatsolver.backward property)": [[11, "pymatsolver.Backward.dtype", false]], "dtype (pymatsolver.bicgjacobi property)": [[32, "pymatsolver.BiCGJacobi.dtype", false]], "dtype (pymatsolver.diagonal property)": [[54, "pymatsolver.Diagonal.dtype", false]], "dtype (pymatsolver.forward property)": [[73, "pymatsolver.Forward.dtype", false]], "dtype (pymatsolver.mumps property)": [[93, "pymatsolver.Mumps.dtype", false]], "dtype (pymatsolver.pardiso property)": [[114, "pymatsolver.Pardiso.dtype", false]], "dtype (pymatsolver.solver property)": [[135, "pymatsolver.Solver.dtype", false]], "dtype (pymatsolver.solvercg property)": [[155, "pymatsolver.SolverCG.dtype", false]], "dtype (pymatsolver.solverlu property)": [[175, "pymatsolver.SolverLU.dtype", false]], "dtype (pymatsolver.solvers.base property)": [[215, "pymatsolver.solvers.Base.dtype", false]], "dtype (pymatsolver.triangle property)": [[195, "pymatsolver.Triangle.dtype", false]], "factor() (pymatsolver.bicgjacobi method)": [[33, "pymatsolver.BiCGJacobi.factor", false]], "factor() (pymatsolver.mumps method)": [[94, "pymatsolver.Mumps.factor", false]], "factor() (pymatsolver.pardiso method)": [[115, "pymatsolver.Pardiso.factor", false]], "forward (class in pymatsolver)": [[63, "pymatsolver.Forward", false]], "get_attributes() (pymatsolver.backward method)": [[12, "pymatsolver.Backward.get_attributes", false]], "get_attributes() (pymatsolver.bicgjacobi method)": [[34, "pymatsolver.BiCGJacobi.get_attributes", false]], "get_attributes() (pymatsolver.diagonal method)": [[55, "pymatsolver.Diagonal.get_attributes", false]], "get_attributes() (pymatsolver.forward method)": [[74, "pymatsolver.Forward.get_attributes", false]], "get_attributes() (pymatsolver.mumps method)": [[95, "pymatsolver.Mumps.get_attributes", false]], "get_attributes() (pymatsolver.pardiso method)": [[116, "pymatsolver.Pardiso.get_attributes", false]], "get_attributes() (pymatsolver.solver method)": [[136, "pymatsolver.Solver.get_attributes", false]], "get_attributes() (pymatsolver.solvercg method)": [[156, "pymatsolver.SolverCG.get_attributes", false]], "get_attributes() (pymatsolver.solverlu method)": [[176, "pymatsolver.SolverLU.get_attributes", false]], "get_attributes() (pymatsolver.solvers.base method)": [[216, "pymatsolver.solvers.Base.get_attributes", false]], "get_attributes() (pymatsolver.triangle method)": [[196, "pymatsolver.Triangle.get_attributes", false]], "is_hermitian (pymatsolver.backward property)": [[13, "pymatsolver.Backward.is_hermitian", false]], "is_hermitian (pymatsolver.bicgjacobi property)": [[35, "pymatsolver.BiCGJacobi.is_hermitian", false]], "is_hermitian (pymatsolver.diagonal property)": [[56, "pymatsolver.Diagonal.is_hermitian", false]], "is_hermitian (pymatsolver.forward property)": [[75, "pymatsolver.Forward.is_hermitian", false]], "is_hermitian (pymatsolver.mumps property)": [[96, "pymatsolver.Mumps.is_hermitian", false]], "is_hermitian (pymatsolver.pardiso property)": [[117, "pymatsolver.Pardiso.is_hermitian", false]], "is_hermitian (pymatsolver.solver property)": [[137, "pymatsolver.Solver.is_hermitian", false]], "is_hermitian (pymatsolver.solvercg property)": [[157, "pymatsolver.SolverCG.is_hermitian", false]], "is_hermitian (pymatsolver.solverlu property)": [[177, "pymatsolver.SolverLU.is_hermitian", false]], "is_hermitian (pymatsolver.solvers.base property)": [[217, "pymatsolver.solvers.Base.is_hermitian", false]], "is_hermitian (pymatsolver.triangle property)": [[197, "pymatsolver.Triangle.is_hermitian", false]], "is_positive_definite (pymatsolver.backward property)": [[14, "pymatsolver.Backward.is_positive_definite", false]], "is_positive_definite (pymatsolver.bicgjacobi property)": [[36, "pymatsolver.BiCGJacobi.is_positive_definite", false]], "is_positive_definite (pymatsolver.diagonal property)": [[57, "pymatsolver.Diagonal.is_positive_definite", false]], "is_positive_definite (pymatsolver.forward property)": [[76, "pymatsolver.Forward.is_positive_definite", false]], "is_positive_definite (pymatsolver.mumps property)": [[97, "pymatsolver.Mumps.is_positive_definite", false]], "is_positive_definite (pymatsolver.pardiso property)": [[118, "pymatsolver.Pardiso.is_positive_definite", false]], "is_positive_definite (pymatsolver.solver property)": [[138, "pymatsolver.Solver.is_positive_definite", false]], "is_positive_definite (pymatsolver.solvercg property)": [[158, "pymatsolver.SolverCG.is_positive_definite", false]], "is_positive_definite (pymatsolver.solverlu property)": [[178, "pymatsolver.SolverLU.is_positive_definite", false]], "is_positive_definite (pymatsolver.solvers.base property)": [[218, "pymatsolver.solvers.Base.is_positive_definite", false]], "is_positive_definite (pymatsolver.triangle property)": [[198, "pymatsolver.Triangle.is_positive_definite", false]], "is_real (pymatsolver.backward property)": [[15, "pymatsolver.Backward.is_real", false]], "is_real (pymatsolver.bicgjacobi property)": [[37, "pymatsolver.BiCGJacobi.is_real", false]], "is_real (pymatsolver.diagonal property)": [[58, "pymatsolver.Diagonal.is_real", false]], "is_real (pymatsolver.forward property)": [[77, "pymatsolver.Forward.is_real", false]], "is_real (pymatsolver.mumps property)": [[98, "pymatsolver.Mumps.is_real", false]], "is_real (pymatsolver.pardiso property)": [[119, "pymatsolver.Pardiso.is_real", false]], "is_real (pymatsolver.solver property)": [[139, "pymatsolver.Solver.is_real", false]], "is_real (pymatsolver.solvercg property)": [[159, "pymatsolver.SolverCG.is_real", false]], "is_real (pymatsolver.solverlu property)": [[179, "pymatsolver.SolverLU.is_real", false]], "is_real (pymatsolver.solvers.base property)": [[219, "pymatsolver.solvers.Base.is_real", false]], "is_real (pymatsolver.triangle property)": [[199, "pymatsolver.Triangle.is_real", false]], "is_symmetric (pymatsolver.backward property)": [[16, "pymatsolver.Backward.is_symmetric", false]], "is_symmetric (pymatsolver.bicgjacobi property)": [[38, "pymatsolver.BiCGJacobi.is_symmetric", false]], "is_symmetric (pymatsolver.diagonal property)": [[59, "pymatsolver.Diagonal.is_symmetric", false]], "is_symmetric (pymatsolver.forward property)": [[78, "pymatsolver.Forward.is_symmetric", false]], "is_symmetric (pymatsolver.mumps property)": [[99, "pymatsolver.Mumps.is_symmetric", false]], "is_symmetric (pymatsolver.pardiso property)": [[120, "pymatsolver.Pardiso.is_symmetric", false]], "is_symmetric (pymatsolver.solver property)": [[140, "pymatsolver.Solver.is_symmetric", false]], "is_symmetric (pymatsolver.solvercg property)": [[160, "pymatsolver.SolverCG.is_symmetric", false]], "is_symmetric (pymatsolver.solverlu property)": [[180, "pymatsolver.SolverLU.is_symmetric", false]], "is_symmetric (pymatsolver.solvers.base property)": [[220, "pymatsolver.solvers.Base.is_symmetric", false]], "is_symmetric (pymatsolver.triangle property)": [[200, "pymatsolver.Triangle.is_symmetric", false]], "kwargs (pymatsolver.solver property)": [[141, "pymatsolver.Solver.kwargs", false]], "kwargs (pymatsolver.solvercg property)": [[161, "pymatsolver.SolverCG.kwargs", false]], "kwargs (pymatsolver.solverlu property)": [[181, "pymatsolver.SolverLU.kwargs", false]], "lower (pymatsolver.backward property)": [[17, "pymatsolver.Backward.lower", false]], "lower (pymatsolver.forward property)": [[79, "pymatsolver.Forward.lower", false]], "lower (pymatsolver.triangle property)": [[201, "pymatsolver.Triangle.lower", false]], "maxiter (pymatsolver.bicgjacobi property)": [[39, "pymatsolver.BiCGJacobi.maxiter", false]], "module": [[0, "module-pymatsolver", false]], "mumps (class in pymatsolver)": [[83, "pymatsolver.Mumps", false]], "n_threads (pymatsolver.pardiso property)": [[121, "pymatsolver.Pardiso.n_threads", false]], "ordering (pymatsolver.mumps property)": [[100, "pymatsolver.Mumps.ordering", false]], "pardiso (class in pymatsolver)": [[104, "pymatsolver.Pardiso", false]], "pymatsolver": [[0, "module-pymatsolver", false]], "rtol (pymatsolver.bicgjacobi property)": [[40, "pymatsolver.BiCGJacobi.rtol", false]], "shape (pymatsolver.backward property)": [[18, "pymatsolver.Backward.shape", false]], "shape (pymatsolver.bicgjacobi property)": [[41, "pymatsolver.BiCGJacobi.shape", false]], "shape (pymatsolver.diagonal property)": [[60, "pymatsolver.Diagonal.shape", false]], "shape (pymatsolver.forward property)": [[80, "pymatsolver.Forward.shape", false]], "shape (pymatsolver.mumps property)": [[101, "pymatsolver.Mumps.shape", false]], "shape (pymatsolver.pardiso property)": [[122, "pymatsolver.Pardiso.shape", false]], "shape (pymatsolver.solver property)": [[142, "pymatsolver.Solver.shape", false]], "shape (pymatsolver.solvercg property)": [[162, "pymatsolver.SolverCG.shape", false]], "shape (pymatsolver.solverlu property)": [[182, "pymatsolver.SolverLU.shape", false]], "shape (pymatsolver.solvers.base property)": [[221, "pymatsolver.solvers.Base.shape", false]], "shape (pymatsolver.triangle property)": [[202, "pymatsolver.Triangle.shape", false]], "solve() (pymatsolver.backward method)": [[19, "pymatsolver.Backward.solve", false]], "solve() (pymatsolver.bicgjacobi method)": [[42, "pymatsolver.BiCGJacobi.solve", false]], "solve() (pymatsolver.diagonal method)": [[61, "pymatsolver.Diagonal.solve", false]], "solve() (pymatsolver.forward method)": [[81, "pymatsolver.Forward.solve", false]], "solve() (pymatsolver.mumps method)": [[102, "pymatsolver.Mumps.solve", false]], "solve() (pymatsolver.pardiso method)": [[123, "pymatsolver.Pardiso.solve", false]], "solve() (pymatsolver.solver method)": [[143, "pymatsolver.Solver.solve", false]], "solve() (pymatsolver.solvercg method)": [[163, "pymatsolver.SolverCG.solve", false]], "solve() (pymatsolver.solverlu method)": [[183, "pymatsolver.SolverLU.solve", false]], "solve() (pymatsolver.solvers.base method)": [[222, "pymatsolver.solvers.Base.solve", false]], "solve() (pymatsolver.triangle method)": [[203, "pymatsolver.Triangle.solve", false]], "solver (class in pymatsolver)": [[125, "pymatsolver.Solver", false]], "solvercg (class in pymatsolver)": [[145, "pymatsolver.SolverCG", false]], "solverlu (class in pymatsolver)": [[165, "pymatsolver.SolverLU", false]], "t (pymatsolver.backward property)": [[3, "pymatsolver.Backward.T", false]], "t (pymatsolver.bicgjacobi property)": [[23, "pymatsolver.BiCGJacobi.T", false]], "t (pymatsolver.diagonal property)": [[46, "pymatsolver.Diagonal.T", false]], "t (pymatsolver.forward property)": [[65, "pymatsolver.Forward.T", false]], "t (pymatsolver.mumps property)": [[85, "pymatsolver.Mumps.T", false]], "t (pymatsolver.pardiso property)": [[106, "pymatsolver.Pardiso.T", false]], "t (pymatsolver.solver property)": [[127, "pymatsolver.Solver.T", false]], "t (pymatsolver.solvercg property)": [[147, "pymatsolver.SolverCG.T", false]], "t (pymatsolver.solverlu property)": [[167, "pymatsolver.SolverLU.T", false]], "t (pymatsolver.solvers.base property)": [[207, "pymatsolver.solvers.Base.T", false]], "t (pymatsolver.triangle property)": [[187, "pymatsolver.Triangle.T", false]], "transpose() (pymatsolver.backward method)": [[20, "pymatsolver.Backward.transpose", false]], "transpose() (pymatsolver.bicgjacobi method)": [[43, "pymatsolver.BiCGJacobi.transpose", false]], "transpose() (pymatsolver.diagonal method)": [[62, "pymatsolver.Diagonal.transpose", false]], "transpose() (pymatsolver.forward method)": [[82, "pymatsolver.Forward.transpose", false]], "transpose() (pymatsolver.mumps method)": [[103, "pymatsolver.Mumps.transpose", false]], "transpose() (pymatsolver.pardiso method)": [[124, "pymatsolver.Pardiso.transpose", false]], "transpose() (pymatsolver.solver method)": [[144, "pymatsolver.Solver.transpose", false]], "transpose() (pymatsolver.solvercg method)": [[164, "pymatsolver.SolverCG.transpose", false]], "transpose() (pymatsolver.solverlu method)": [[184, "pymatsolver.SolverLU.transpose", false]], "transpose() (pymatsolver.solvers.base method)": [[223, "pymatsolver.solvers.Base.transpose", false]], "transpose() (pymatsolver.triangle method)": [[204, "pymatsolver.Triangle.transpose", false]], "triangle (class in pymatsolver)": [[185, "pymatsolver.Triangle", false]]}, "objects": {"": [[0, 0, 0, "-", "pymatsolver"]], "pymatsolver": [[1, 1, 1, "", "Backward"], [21, 1, 1, "", "BiCGJacobi"], [44, 1, 1, "", "Diagonal"], [63, 1, 1, "", "Forward"], [83, 1, 1, "", "Mumps"], [104, 1, 1, "", "Pardiso"], [125, 1, 1, "", "Solver"], [145, 1, 1, "", "SolverCG"], [165, 1, 1, "", "SolverLU"], [185, 1, 1, "", "Triangle"]], "pymatsolver.Backward": [[2, 2, 1, "", "A"], [3, 2, 1, "", "T"], [4, 3, 1, "", "__mul__"], [5, 2, 1, "", "check_accuracy"], [6, 2, 1, "", "check_atol"], [7, 2, 1, "", "check_rtol"], [8, 3, 1, "", "clean"], [9, 3, 1, "", "conj"], [10, 3, 1, "", "conjugate"], [11, 2, 1, "", "dtype"], [12, 3, 1, "", "get_attributes"], [13, 2, 1, "", "is_hermitian"], [14, 2, 1, "", "is_positive_definite"], [15, 2, 1, "", "is_real"], [16, 2, 1, "", "is_symmetric"], [17, 2, 1, "", "lower"], [18, 2, 1, "", "shape"], [19, 3, 1, "", "solve"], [20, 3, 1, "", "transpose"]], "pymatsolver.BiCGJacobi": [[22, 2, 1, "", "A"], [23, 2, 1, "", "T"], [24, 3, 1, "", "__mul__"], [25, 2, 1, "", "atol"], [26, 2, 1, "", "check_accuracy"], [27, 2, 1, "", "check_atol"], [28, 2, 1, "", "check_rtol"], [29, 3, 1, "", "clean"], [30, 3, 1, "", "conj"], [31, 3, 1, "", "conjugate"], [32, 2, 1, "", "dtype"], [33, 3, 1, "", "factor"], [34, 3, 1, "", "get_attributes"], [35, 2, 1, "", "is_hermitian"], [36, 2, 1, "", "is_positive_definite"], [37, 2, 1, "", "is_real"], [38, 2, 1, "", "is_symmetric"], [39, 2, 1, "", "maxiter"], [40, 2, 1, "", "rtol"], [41, 2, 1, "", "shape"], [42, 3, 1, "", "solve"], [43, 3, 1, "", "transpose"]], "pymatsolver.Diagonal": [[45, 2, 1, "", "A"], [46, 2, 1, "", "T"], [47, 3, 1, "", "__mul__"], [48, 2, 1, "", "check_accuracy"], [49, 2, 1, "", "check_atol"], [50, 2, 1, "", "check_rtol"], [51, 3, 1, "", "clean"], [52, 3, 1, "", "conj"], [53, 3, 1, "", "conjugate"], [54, 2, 1, "", "dtype"], [55, 3, 1, "", "get_attributes"], [56, 2, 1, "", "is_hermitian"], [57, 2, 1, "", "is_positive_definite"], [58, 2, 1, "", "is_real"], [59, 2, 1, "", "is_symmetric"], [60, 2, 1, "", "shape"], [61, 3, 1, "", "solve"], [62, 3, 1, "", "transpose"]], "pymatsolver.Forward": [[64, 2, 1, "", "A"], [65, 2, 1, "", "T"], [66, 3, 1, "", "__mul__"], [67, 2, 1, "", "check_accuracy"], [68, 2, 1, "", "check_atol"], [69, 2, 1, "", "check_rtol"], [70, 3, 1, "", "clean"], [71, 3, 1, "", "conj"], [72, 3, 1, "", "conjugate"], [73, 2, 1, "", "dtype"], [74, 3, 1, "", "get_attributes"], [75, 2, 1, "", "is_hermitian"], [76, 2, 1, "", "is_positive_definite"], [77, 2, 1, "", "is_real"], [78, 2, 1, "", "is_symmetric"], [79, 2, 1, "", "lower"], [80, 2, 1, "", "shape"], [81, 3, 1, "", "solve"], [82, 3, 1, "", "transpose"]], "pymatsolver.Mumps": [[84, 2, 1, "", "A"], [85, 2, 1, "", "T"], [86, 3, 1, "", "__mul__"], [87, 2, 1, "", "check_accuracy"], [88, 2, 1, "", "check_atol"], [89, 2, 1, "", "check_rtol"], [90, 3, 1, "", "clean"], [91, 3, 1, "", "conj"], [92, 3, 1, "", "conjugate"], [93, 2, 1, "", "dtype"], [94, 3, 1, "", "factor"], [95, 3, 1, "", "get_attributes"], [96, 2, 1, "", "is_hermitian"], [97, 2, 1, "", "is_positive_definite"], [98, 2, 1, "", "is_real"], [99, 2, 1, "", "is_symmetric"], [100, 2, 1, "", "ordering"], [101, 2, 1, "", "shape"], [102, 3, 1, "", "solve"], [103, 3, 1, "", "transpose"]], "pymatsolver.Pardiso": [[105, 2, 1, "", "A"], [106, 2, 1, "", "T"], [107, 3, 1, "", "__mul__"], [108, 2, 1, "", "check_accuracy"], [109, 2, 1, "", "check_atol"], [110, 2, 1, "", "check_rtol"], [111, 3, 1, "", "clean"], [112, 3, 1, "", "conj"], [113, 3, 1, "", "conjugate"], [114, 2, 1, "", "dtype"], [115, 3, 1, "", "factor"], [116, 3, 1, "", "get_attributes"], [117, 2, 1, "", "is_hermitian"], [118, 2, 1, "", "is_positive_definite"], [119, 2, 1, "", "is_real"], [120, 2, 1, "", "is_symmetric"], [121, 2, 1, "", "n_threads"], [122, 2, 1, "", "shape"], [123, 3, 1, "", "solve"], [124, 3, 1, "", "transpose"]], "pymatsolver.Solver": [[126, 2, 1, "", "A"], [127, 2, 1, "", "T"], [128, 3, 1, "", "__mul__"], [129, 2, 1, "", "check_accuracy"], [130, 2, 1, "", "check_atol"], [131, 2, 1, "", "check_rtol"], [132, 3, 1, "", "clean"], [133, 3, 1, "", "conj"], [134, 3, 1, "", "conjugate"], [135, 2, 1, "", "dtype"], [136, 3, 1, "", "get_attributes"], [137, 2, 1, "", "is_hermitian"], [138, 2, 1, "", "is_positive_definite"], [139, 2, 1, "", "is_real"], [140, 2, 1, "", "is_symmetric"], [141, 2, 1, "", "kwargs"], [142, 2, 1, "", "shape"], [143, 3, 1, "", "solve"], [144, 3, 1, "", "transpose"]], "pymatsolver.SolverCG": [[146, 2, 1, "", "A"], [147, 2, 1, "", "T"], [148, 3, 1, "", "__mul__"], [149, 2, 1, "", "check_accuracy"], [150, 2, 1, "", "check_atol"], [151, 2, 1, "", "check_rtol"], [152, 3, 1, "", "clean"], [153, 3, 1, "", "conj"], [154, 3, 1, "", "conjugate"], [155, 2, 1, "", "dtype"], [156, 3, 1, "", "get_attributes"], [157, 2, 1, "", "is_hermitian"], [158, 2, 1, "", "is_positive_definite"], [159, 2, 1, "", "is_real"], [160, 2, 1, "", "is_symmetric"], [161, 2, 1, "", "kwargs"], [162, 2, 1, "", "shape"], [163, 3, 1, "", "solve"], [164, 3, 1, "", "transpose"]], "pymatsolver.SolverLU": [[166, 2, 1, "", "A"], [167, 2, 1, "", "T"], [168, 3, 1, "", "__mul__"], [169, 2, 1, "", "check_accuracy"], [170, 2, 1, "", "check_atol"], [171, 2, 1, "", "check_rtol"], [172, 3, 1, "", "clean"], [173, 3, 1, "", "conj"], [174, 3, 1, "", "conjugate"], [175, 2, 1, "", "dtype"], [176, 3, 1, "", "get_attributes"], [177, 2, 1, "", "is_hermitian"], [178, 2, 1, "", "is_positive_definite"], [179, 2, 1, "", "is_real"], [180, 2, 1, "", "is_symmetric"], [181, 2, 1, "", "kwargs"], [182, 2, 1, "", "shape"], [183, 3, 1, "", "solve"], [184, 3, 1, "", "transpose"]], "pymatsolver.Triangle": [[186, 2, 1, "", "A"], [187, 2, 1, "", "T"], [188, 3, 1, "", "__mul__"], [189, 2, 1, "", "check_accuracy"], [190, 2, 1, "", "check_atol"], [191, 2, 1, "", "check_rtol"], [192, 3, 1, "", "clean"], [193, 3, 1, "", "conj"], [194, 3, 1, "", "conjugate"], [195, 2, 1, "", "dtype"], [196, 3, 1, "", "get_attributes"], [197, 2, 1, "", "is_hermitian"], [198, 2, 1, "", "is_positive_definite"], [199, 2, 1, "", "is_real"], [200, 2, 1, "", "is_symmetric"], [201, 2, 1, "", "lower"], [202, 2, 1, "", "shape"], [203, 3, 1, "", "solve"], [204, 3, 1, "", "transpose"]], "pymatsolver.solvers": [[205, 1, 1, "", "Base"]], "pymatsolver.solvers.Base": [[206, 2, 1, "", "A"], [207, 2, 1, "", "T"], [208, 3, 1, "", "__mul__"], [209, 2, 1, "", "check_accuracy"], [210, 2, 1, "", "check_atol"], [211, 2, 1, "", "check_rtol"], [212, 3, 1, "", "clean"], [213, 3, 1, "", "conj"], [214, 3, 1, "", "conjugate"], [215, 2, 1, "", "dtype"], [216, 3, 1, "", "get_attributes"], [217, 2, 1, "", "is_hermitian"], [218, 2, 1, "", "is_positive_definite"], [219, 2, 1, "", "is_real"], [220, 2, 1, "", "is_symmetric"], [221, 2, 1, "", "shape"], [222, 3, 1, "", "solve"], [223, 3, 1, "", "transpose"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method"}, "terms": {"": [94, 104, 115, 224], "0": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "06": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "1000": 21, "1e": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "2": [18, 41, 60, 80, 101, 122, 142, 162, 182, 202, 221], "3": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "4": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "A": [1, 5, 19, 21, 26, 42, 44, 48, 61, 63, 67, 81, 83, 87, 94, 102, 104, 108, 115, 123, 125, 129, 143, 145, 149, 163, 165, 169, 183, 185, 189, 203, 205, 209, 222, 224], "By": [83, 104, 205], "If": [83, 94, 104, 115, 205], "In": 224, "It": 21, "The": [1, 2, 3, 6, 7, 11, 18, 19, 21, 22, 23, 27, 28, 32, 41, 42, 44, 45, 46, 49, 50, 54, 60, 61, 63, 64, 65, 68, 69, 73, 80, 81, 83, 84, 85, 88, 89, 93, 94, 100, 101, 102, 104, 105, 106, 109, 110, 114, 115, 122, 123, 125, 126, 127, 130, 131, 135, 142, 143, 145, 146, 147, 150, 151, 155, 162, 163, 165, 166, 167, 170, 171, 175, 182, 183, 185, 186, 187, 190, 191, 195, 202, 203, 205, 206, 207, 210, 211, 215, 221, 222, 224], "To": 224, "absolut": [1, 6, 21, 27, 44, 49, 63, 68, 83, 88, 104, 109, 125, 130, 145, 150, 165, 170, 185, 190, 205, 210], "accuraci": [1, 5, 21, 26, 44, 48, 63, 67, 83, 87, 104, 108, 125, 129, 145, 149, 165, 169, 185, 189, 205, 209], "accuracy_tol": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "after": [1, 5, 21, 26, 44, 48, 63, 67, 83, 87, 104, 108, 125, 129, 145, 149, 165, 169, 185, 189, 205, 209], "against": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "ainv": 224, "algorithm": [83, 100], "alia": [3, 23, 46, 65, 85, 106, 127, 147, 167, 187, 207], "all": [5, 26, 48, 67, 87, 108, 121, 129, 149, 169, 189, 205, 209, 224], "an": [3, 23, 46, 65, 85, 106, 127, 147, 167, 187, 207], "analysi": [94, 115], "ani": [83, 104, 205], "ann": 1, "api": 224, "ar": [83, 104, 205, 224], "argument": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "array_lik": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222], "atol": 21, "attempt": [125, 145, 165], "attribut": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "ax": 224, "b": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222, 224], "base": [1, 9, 10, 20, 21, 30, 31, 43, 44, 52, 53, 62, 63, 71, 72, 82, 91, 92, 103, 112, 113, 124, 133, 134, 144, 153, 154, 164, 173, 174, 184, 185, 193, 194, 204, 224], "basic": 224, "been": [94, 115], "bicg": 21, "bool": [1, 5, 6, 7, 13, 14, 15, 16, 21, 26, 27, 28, 35, 36, 37, 38, 44, 48, 49, 50, 56, 57, 58, 59, 63, 67, 68, 69, 75, 76, 77, 78, 83, 87, 88, 89, 96, 97, 98, 99, 104, 108, 109, 110, 117, 118, 119, 120, 125, 129, 130, 131, 137, 138, 139, 140, 145, 149, 150, 151, 157, 158, 159, 160, 165, 169, 170, 171, 177, 178, 179, 180, 185, 189, 190, 191, 197, 198, 199, 200, 205, 209, 210, 211, 217, 218, 219, 220], "boolean": 21, "both": 224, "broadcast": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222], "bug": 224, "c": 224, "can": 224, "check": [1, 5, 6, 7, 21, 26, 27, 28, 44, 48, 49, 50, 63, 67, 68, 69, 83, 87, 88, 89, 104, 108, 109, 110, 125, 129, 130, 131, 145, 149, 150, 151, 165, 169, 170, 171, 185, 189, 190, 191, 205, 209, 210, 211], "check_accuraci": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "check_atol": [1, 5, 21, 26, 44, 48, 63, 67, 83, 87, 104, 108, 125, 129, 145, 149, 165, 169, 185, 189, 205, 209], "check_rtol": [1, 5, 21, 26, 44, 48, 63, 67, 83, 87, 104, 108, 125, 129, 145, 149, 165, 169, 185, 189, 205, 209], "class": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "clean": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "code": 224, "complex": [9, 10, 30, 31, 52, 53, 71, 72, 91, 92, 112, 113, 133, 134, 153, 154, 173, 174, 193, 194, 213, 214], "conda": 224, "condit": 21, "conjug": [9, 30, 52, 71, 91, 112, 133, 153, 173, 193, 213], "consist": 224, "data": [1, 11, 21, 32, 44, 54, 63, 73, 83, 93, 104, 114, 125, 135, 145, 155, 165, 175, 185, 195, 205, 215], "default": [83, 104, 205, 224], "definit": [1, 14, 21, 36, 44, 57, 63, 76, 83, 97, 104, 118, 125, 138, 145, 158, 165, 178, 185, 198, 205, 218], "deprec": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "detail": 83, "diagon": [21, 185], "dimens": [1, 18, 21, 41, 44, 60, 63, 80, 83, 101, 104, 122, 125, 142, 145, 162, 165, 182, 185, 202, 205, 221], "direct": [83, 104, 224], "document": 83, "dtype": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "easi": 224, "easili": 224, "enabl": 224, "equat": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222], "exampl": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222], "exist": 224, "extra": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "factor": [21, 83, 104, 224], "fail": [83, 104, 205], "fals": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "fanci": 224, "faster": 224, "float": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "forg": 224, "function": [125, 145, 165], "get_attribut": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "given": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222], "global": 121, "ha": [94, 115], "hand": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222, 224], "handsid": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222], "have": [21, 44], "here": [83, 104, 205, 224], "hermitian": [1, 13, 21, 35, 44, 56, 63, 75, 83, 96, 104, 117, 125, 137, 145, 157, 165, 177, 185, 197, 205, 217], "how": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222], "i": [1, 3, 13, 14, 15, 16, 21, 23, 35, 36, 37, 38, 44, 46, 56, 57, 58, 59, 63, 65, 75, 76, 77, 78, 83, 85, 96, 97, 98, 99, 104, 106, 117, 118, 119, 120, 121, 125, 127, 137, 138, 139, 140, 145, 147, 157, 158, 159, 160, 165, 167, 177, 178, 179, 180, 185, 187, 197, 198, 199, 200, 205, 207, 217, 218, 219, 220, 224], "index": 224, "indirect": 224, "input": [1, 18, 21, 41, 44, 60, 63, 80, 83, 101, 104, 122, 125, 142, 145, 162, 165, 182, 185, 202, 205, 221], "instead": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "int": [21, 104, 121], "intel": [104, 224], "interfac": 224, "intermedi": 224, "is_hermitian": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "is_positive_definit": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "is_real": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "is_symmetr": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "issu": 224, "iter": [21, 224], "keyword": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "kwarg": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "l": 224, "left": [83, 104, 205], "librari": 224, "licens": 224, "linalg": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222], "lower": [1, 63, 185], "m": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222], "make": 224, "matrici": 224, "matrix": [1, 2, 11, 13, 14, 15, 16, 18, 21, 22, 32, 35, 36, 37, 38, 41, 44, 45, 54, 56, 57, 58, 59, 60, 63, 64, 73, 75, 76, 77, 78, 80, 83, 84, 93, 94, 96, 97, 98, 99, 101, 104, 105, 114, 115, 117, 118, 119, 120, 122, 125, 126, 135, 137, 138, 139, 140, 142, 145, 146, 155, 157, 158, 159, 160, 162, 165, 166, 175, 177, 178, 179, 180, 182, 185, 186, 195, 197, 198, 199, 200, 202, 205, 206, 215, 217, 218, 219, 220, 221, 224], "max": [5, 26, 48, 67, 87, 108, 129, 149, 169, 189, 209], "maximum": 21, "maxit": 21, "method": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "meti": 83, "mit": 224, "mkl": [104, 224], "modul": 224, "more": 83, "multipl": 224, "must": [21, 44, 224], "n": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222], "n_thread": 104, "none": [1, 21, 44, 63, 83, 94, 104, 115, 125, 145, 165, 185, 205], "norm": [5, 26, 48, 67, 87, 108, 129, 149, 169, 189, 209], "noth": 224, "number": [21, 104, 121, 224], "numer": 224, "numpi": [11, 19, 32, 42, 54, 61, 73, 81, 93, 102, 114, 123, 135, 143, 155, 163, 175, 183, 195, 203, 215, 222, 224], "object": 121, "often": 224, "oper": [1, 3, 6, 7, 19, 20, 21, 23, 27, 28, 42, 43, 44, 46, 49, 50, 61, 62, 63, 65, 68, 69, 81, 82, 83, 85, 88, 89, 102, 103, 104, 106, 109, 110, 123, 124, 125, 127, 130, 131, 143, 144, 145, 147, 150, 151, 163, 164, 165, 167, 170, 171, 183, 184, 185, 187, 190, 191, 203, 204, 205, 207, 210, 211, 222, 223], "option": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "order": 83, "packag": [205, 224], "page": 224, "paramet": [1, 19, 21, 42, 44, 61, 63, 81, 83, 94, 102, 104, 115, 123, 125, 143, 145, 163, 165, 183, 185, 203, 205, 222], "pass": [1, 21, 44, 63, 125, 145, 165, 185], "perform": [5, 21, 26, 48, 67, 83, 87, 94, 104, 108, 115, 129, 149, 169, 189, 205, 209], "platform": 224, "posit": [1, 14, 21, 36, 44, 57, 63, 76, 83, 97, 104, 118, 125, 138, 145, 158, 165, 178, 185, 198, 205, 218], "pre": 21, "previou": [94, 115], "process": 121, "processor": 224, "properti": [2, 3, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 22, 23, 25, 26, 27, 28, 32, 35, 36, 37, 38, 39, 40, 41, 45, 46, 48, 49, 50, 54, 56, 57, 58, 59, 60, 64, 65, 67, 68, 69, 73, 75, 76, 77, 78, 79, 80, 84, 85, 87, 88, 89, 93, 96, 97, 98, 99, 100, 101, 105, 106, 108, 109, 110, 114, 117, 118, 119, 120, 121, 122, 126, 127, 129, 130, 131, 135, 137, 138, 139, 140, 141, 142, 146, 147, 149, 150, 151, 155, 157, 158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 175, 177, 178, 179, 180, 181, 182, 186, 187, 189, 190, 191, 195, 197, 198, 199, 200, 201, 202, 206, 207, 209, 210, 211, 215, 217, 218, 219, 220, 221], "provid": 224, "pydiso": [104, 224], "python": [83, 121, 224], "rais": [83, 104, 205], "re": [94, 115], "real": [1, 15, 21, 37, 44, 58, 63, 77, 83, 98, 104, 119, 125, 139, 145, 159, 165, 179, 185, 199, 205, 219], "recommend": 224, "rel": [1, 7, 21, 28, 44, 50, 63, 69, 83, 89, 104, 110, 125, 131, 145, 151, 165, 171, 185, 191, 205, 211], "remov": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "return": [5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 87, 88, 89, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223], "reus": [94, 115], "rh": [5, 19, 26, 42, 48, 61, 67, 81, 87, 102, 108, 123, 129, 143, 149, 163, 169, 183, 189, 203, 209, 222], "right": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222, 224], "routin": [104, 121, 224], "rtol": 21, "scipi": [1, 63, 94, 104, 115, 185, 224], "search": 224, "see": 83, "separ": 224, "shape": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "should": 224, "side": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222, 224], "simpeg": 224, "simpl": [83, 104, 205], "sinc": 21, "singl": [121, 224], "solut": [1, 19, 21, 42, 44, 61, 63, 81, 83, 102, 104, 123, 125, 143, 145, 163, 165, 183, 185, 203, 205, 222], "solv": [1, 2, 3, 5, 6, 7, 20, 21, 22, 23, 26, 27, 28, 43, 44, 45, 46, 48, 49, 50, 62, 63, 64, 65, 67, 68, 69, 82, 83, 84, 85, 87, 88, 89, 103, 104, 105, 106, 108, 109, 110, 124, 125, 126, 127, 129, 130, 131, 144, 145, 146, 147, 149, 150, 151, 164, 165, 166, 167, 169, 170, 171, 184, 185, 186, 187, 189, 190, 191, 204, 205, 206, 207, 209, 210, 211, 223, 224], "solver": [1, 9, 10, 20, 21, 30, 31, 43, 44, 52, 53, 62, 63, 71, 72, 82, 83, 91, 92, 103, 104, 112, 113, 121, 124, 145, 153, 154, 164, 165, 173, 174, 184, 185, 193, 194, 204], "some": [83, 104, 205], "sourc": [1, 4, 8, 9, 10, 12, 19, 20, 21, 24, 29, 30, 31, 33, 34, 42, 43, 44, 47, 51, 52, 53, 55, 61, 62, 63, 66, 70, 71, 72, 74, 81, 82, 83, 86, 90, 91, 92, 94, 95, 102, 103, 104, 107, 111, 112, 113, 115, 116, 123, 124, 125, 128, 132, 133, 134, 136, 143, 144, 145, 148, 152, 153, 154, 156, 163, 164, 165, 168, 172, 173, 174, 176, 183, 184, 185, 188, 192, 193, 194, 196, 203, 204, 205, 208, 212, 213, 214, 216, 222, 223], "sparrai": [1, 63, 185], "spars": [1, 63, 83, 94, 104, 115, 185, 224], "spmatrix": [1, 63, 94, 104, 115, 185], "str": [83, 100], "symmetr": [1, 16, 21, 38, 44, 59, 63, 78, 83, 99, 104, 120, 125, 140, 145, 160, 165, 180, 185, 200, 205, 220], "symmetri": [83, 104, 205], "system": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222, 224], "t": [1, 21, 44, 63, 83, 104, 125, 145, 165, 185, 205], "termin": 21, "test": [5, 26, 48, 67, 83, 87, 104, 108, 129, 149, 169, 189, 205, 209, 224], "than": 224, "thi": [9, 10, 19, 30, 31, 42, 52, 53, 61, 71, 72, 81, 83, 91, 92, 94, 102, 104, 112, 113, 115, 121, 123, 133, 134, 143, 153, 154, 163, 173, 174, 183, 193, 194, 203, 213, 214, 222, 224], "those": [83, 104, 205], "thread": [104, 121], "through": 224, "toler": [1, 6, 7, 21, 27, 28, 44, 49, 50, 63, 68, 69, 83, 88, 89, 104, 109, 110, 125, 130, 131, 145, 150, 151, 165, 170, 171, 185, 190, 191, 205, 210, 211], "transpos": [1, 3, 21, 23, 44, 46, 63, 65, 83, 85, 104, 106, 125, 127, 145, 147, 165, 167, 185, 187, 205, 207], "triangular": [1, 63, 185, 224], "true": 185, "tupl": [18, 41, 60, 80, 101, 122, 142, 162, 182, 202, 221], "type": [1, 11, 21, 32, 44, 54, 63, 73, 83, 93, 104, 114, 125, 135, 145, 155, 165, 175, 185, 195, 205, 215], "u": 224, "unus": 21, "upper": [1, 185], "us": [1, 6, 7, 21, 27, 28, 44, 49, 50, 63, 68, 69, 83, 88, 89, 100, 104, 109, 110, 121, 125, 130, 131, 145, 150, 151, 165, 170, 171, 185, 190, 191, 205, 210, 211, 224], "val": [4, 24, 47, 66, 86, 107, 128, 148, 168, 188, 208], "version": [9, 10, 21, 30, 31, 52, 53, 71, 72, 91, 92, 112, 113, 133, 134, 153, 154, 173, 174, 193, 194, 213, 214], "warn": [83, 104, 205], "we": 224, "whether": [1, 5, 13, 14, 15, 16, 21, 26, 35, 36, 37, 38, 44, 48, 56, 57, 58, 59, 63, 67, 75, 76, 77, 78, 83, 87, 96, 97, 98, 99, 104, 108, 117, 118, 119, 120, 125, 129, 137, 138, 139, 140, 145, 149, 157, 158, 159, 160, 165, 169, 177, 178, 179, 180, 185, 189, 197, 198, 199, 200, 205, 209, 217, 218, 219, 220], "which": [83, 125, 145, 165, 224], "work": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222, 224], "wrap": [125, 145, 165, 224], "wrapper": [83, 104, 224], "x": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222, 224], "x_solv": [5, 26, 48, 67, 87, 108, 129, 149, 169, 189, 209], "your": 224}, "titles": ["API", "pymatsolver.Backward", "pymatsolver.Backward.A", "pymatsolver.Backward.T", "pymatsolver.Backward.__mul__", "pymatsolver.Backward.check_accuracy", "pymatsolver.Backward.check_atol", "pymatsolver.Backward.check_rtol", "pymatsolver.Backward.clean", "pymatsolver.Backward.conj", "pymatsolver.Backward.conjugate", "pymatsolver.Backward.dtype", "pymatsolver.Backward.get_attributes", "pymatsolver.Backward.is_hermitian", "pymatsolver.Backward.is_positive_definite", "pymatsolver.Backward.is_real", "pymatsolver.Backward.is_symmetric", "pymatsolver.Backward.lower", "pymatsolver.Backward.shape", "pymatsolver.Backward.solve", "pymatsolver.Backward.transpose", "pymatsolver.BiCGJacobi", "pymatsolver.BiCGJacobi.A", "pymatsolver.BiCGJacobi.T", "pymatsolver.BiCGJacobi.__mul__", "pymatsolver.BiCGJacobi.atol", "pymatsolver.BiCGJacobi.check_accuracy", "pymatsolver.BiCGJacobi.check_atol", "pymatsolver.BiCGJacobi.check_rtol", "pymatsolver.BiCGJacobi.clean", "pymatsolver.BiCGJacobi.conj", "pymatsolver.BiCGJacobi.conjugate", "pymatsolver.BiCGJacobi.dtype", "pymatsolver.BiCGJacobi.factor", "pymatsolver.BiCGJacobi.get_attributes", "pymatsolver.BiCGJacobi.is_hermitian", "pymatsolver.BiCGJacobi.is_positive_definite", "pymatsolver.BiCGJacobi.is_real", "pymatsolver.BiCGJacobi.is_symmetric", "pymatsolver.BiCGJacobi.maxiter", "pymatsolver.BiCGJacobi.rtol", "pymatsolver.BiCGJacobi.shape", "pymatsolver.BiCGJacobi.solve", "pymatsolver.BiCGJacobi.transpose", "pymatsolver.Diagonal", "pymatsolver.Diagonal.A", "pymatsolver.Diagonal.T", "pymatsolver.Diagonal.__mul__", "pymatsolver.Diagonal.check_accuracy", "pymatsolver.Diagonal.check_atol", "pymatsolver.Diagonal.check_rtol", "pymatsolver.Diagonal.clean", "pymatsolver.Diagonal.conj", "pymatsolver.Diagonal.conjugate", "pymatsolver.Diagonal.dtype", "pymatsolver.Diagonal.get_attributes", "pymatsolver.Diagonal.is_hermitian", "pymatsolver.Diagonal.is_positive_definite", "pymatsolver.Diagonal.is_real", "pymatsolver.Diagonal.is_symmetric", "pymatsolver.Diagonal.shape", "pymatsolver.Diagonal.solve", "pymatsolver.Diagonal.transpose", "pymatsolver.Forward", "pymatsolver.Forward.A", "pymatsolver.Forward.T", "pymatsolver.Forward.__mul__", "pymatsolver.Forward.check_accuracy", "pymatsolver.Forward.check_atol", "pymatsolver.Forward.check_rtol", "pymatsolver.Forward.clean", "pymatsolver.Forward.conj", "pymatsolver.Forward.conjugate", "pymatsolver.Forward.dtype", "pymatsolver.Forward.get_attributes", "pymatsolver.Forward.is_hermitian", "pymatsolver.Forward.is_positive_definite", "pymatsolver.Forward.is_real", "pymatsolver.Forward.is_symmetric", "pymatsolver.Forward.lower", "pymatsolver.Forward.shape", "pymatsolver.Forward.solve", "pymatsolver.Forward.transpose", "pymatsolver.Mumps", "pymatsolver.Mumps.A", "pymatsolver.Mumps.T", "pymatsolver.Mumps.__mul__", "pymatsolver.Mumps.check_accuracy", "pymatsolver.Mumps.check_atol", "pymatsolver.Mumps.check_rtol", "pymatsolver.Mumps.clean", "pymatsolver.Mumps.conj", "pymatsolver.Mumps.conjugate", "pymatsolver.Mumps.dtype", "pymatsolver.Mumps.factor", "pymatsolver.Mumps.get_attributes", "pymatsolver.Mumps.is_hermitian", "pymatsolver.Mumps.is_positive_definite", "pymatsolver.Mumps.is_real", "pymatsolver.Mumps.is_symmetric", "pymatsolver.Mumps.ordering", "pymatsolver.Mumps.shape", "pymatsolver.Mumps.solve", "pymatsolver.Mumps.transpose", "pymatsolver.Pardiso", "pymatsolver.Pardiso.A", "pymatsolver.Pardiso.T", "pymatsolver.Pardiso.__mul__", "pymatsolver.Pardiso.check_accuracy", "pymatsolver.Pardiso.check_atol", "pymatsolver.Pardiso.check_rtol", "pymatsolver.Pardiso.clean", "pymatsolver.Pardiso.conj", "pymatsolver.Pardiso.conjugate", "pymatsolver.Pardiso.dtype", "pymatsolver.Pardiso.factor", "pymatsolver.Pardiso.get_attributes", "pymatsolver.Pardiso.is_hermitian", "pymatsolver.Pardiso.is_positive_definite", "pymatsolver.Pardiso.is_real", "pymatsolver.Pardiso.is_symmetric", "pymatsolver.Pardiso.n_threads", "pymatsolver.Pardiso.shape", "pymatsolver.Pardiso.solve", "pymatsolver.Pardiso.transpose", "pymatsolver.Solver", "pymatsolver.Solver.A", "pymatsolver.Solver.T", "pymatsolver.Solver.__mul__", "pymatsolver.Solver.check_accuracy", "pymatsolver.Solver.check_atol", "pymatsolver.Solver.check_rtol", "pymatsolver.Solver.clean", "pymatsolver.Solver.conj", "pymatsolver.Solver.conjugate", "pymatsolver.Solver.dtype", "pymatsolver.Solver.get_attributes", "pymatsolver.Solver.is_hermitian", "pymatsolver.Solver.is_positive_definite", "pymatsolver.Solver.is_real", "pymatsolver.Solver.is_symmetric", "pymatsolver.Solver.kwargs", "pymatsolver.Solver.shape", "pymatsolver.Solver.solve", "pymatsolver.Solver.transpose", "pymatsolver.SolverCG", "pymatsolver.SolverCG.A", "pymatsolver.SolverCG.T", "pymatsolver.SolverCG.__mul__", "pymatsolver.SolverCG.check_accuracy", "pymatsolver.SolverCG.check_atol", "pymatsolver.SolverCG.check_rtol", "pymatsolver.SolverCG.clean", "pymatsolver.SolverCG.conj", "pymatsolver.SolverCG.conjugate", "pymatsolver.SolverCG.dtype", "pymatsolver.SolverCG.get_attributes", "pymatsolver.SolverCG.is_hermitian", "pymatsolver.SolverCG.is_positive_definite", "pymatsolver.SolverCG.is_real", "pymatsolver.SolverCG.is_symmetric", "pymatsolver.SolverCG.kwargs", "pymatsolver.SolverCG.shape", "pymatsolver.SolverCG.solve", "pymatsolver.SolverCG.transpose", "pymatsolver.SolverLU", "pymatsolver.SolverLU.A", "pymatsolver.SolverLU.T", "pymatsolver.SolverLU.__mul__", "pymatsolver.SolverLU.check_accuracy", "pymatsolver.SolverLU.check_atol", "pymatsolver.SolverLU.check_rtol", "pymatsolver.SolverLU.clean", "pymatsolver.SolverLU.conj", "pymatsolver.SolverLU.conjugate", "pymatsolver.SolverLU.dtype", "pymatsolver.SolverLU.get_attributes", "pymatsolver.SolverLU.is_hermitian", "pymatsolver.SolverLU.is_positive_definite", "pymatsolver.SolverLU.is_real", "pymatsolver.SolverLU.is_symmetric", "pymatsolver.SolverLU.kwargs", "pymatsolver.SolverLU.shape", "pymatsolver.SolverLU.solve", "pymatsolver.SolverLU.transpose", "pymatsolver.Triangle", "pymatsolver.Triangle.A", "pymatsolver.Triangle.T", "pymatsolver.Triangle.__mul__", "pymatsolver.Triangle.check_accuracy", "pymatsolver.Triangle.check_atol", "pymatsolver.Triangle.check_rtol", "pymatsolver.Triangle.clean", "pymatsolver.Triangle.conj", "pymatsolver.Triangle.conjugate", "pymatsolver.Triangle.dtype", "pymatsolver.Triangle.get_attributes", "pymatsolver.Triangle.is_hermitian", "pymatsolver.Triangle.is_positive_definite", "pymatsolver.Triangle.is_real", "pymatsolver.Triangle.is_symmetric", "pymatsolver.Triangle.lower", "pymatsolver.Triangle.shape", "pymatsolver.Triangle.solve", "pymatsolver.Triangle.transpose", "pymatsolver.solvers.Base", "pymatsolver.solvers.Base.A", "pymatsolver.solvers.Base.T", "pymatsolver.solvers.Base.__mul__", "pymatsolver.solvers.Base.check_accuracy", "pymatsolver.solvers.Base.check_atol", "pymatsolver.solvers.Base.check_rtol", "pymatsolver.solvers.Base.clean", "pymatsolver.solvers.Base.conj", "pymatsolver.solvers.Base.conjugate", "pymatsolver.solvers.Base.dtype", "pymatsolver.solvers.Base.get_attributes", "pymatsolver.solvers.Base.is_hermitian", "pymatsolver.solvers.Base.is_positive_definite", "pymatsolver.solvers.Base.is_real", "pymatsolver.solvers.Base.is_symmetric", "pymatsolver.solvers.Base.shape", "pymatsolver.solvers.Base.solve", "pymatsolver.solvers.Base.transpose", "pymatsolver"], "titleterms": {"A": [2, 22, 45, 64, 84, 105, 126, 146, 166, 186, 206], "__mul__": [4, 24, 47, 66, 86, 107, 128, 148, 168, 188, 208], "api": 0, "atol": 25, "avail": 224, "backward": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "base": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "basic": 0, "bicgjacobi": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "check_accuraci": [5, 26, 48, 67, 87, 108, 129, 149, 169, 189, 209], "check_atol": [6, 27, 49, 68, 88, 109, 130, 150, 170, 190, 210], "check_rtol": [7, 28, 50, 69, 89, 110, 131, 151, 171, 191, 211], "clean": [8, 29, 51, 70, 90, 111, 132, 152, 172, 192, 212], "conj": [9, 30, 52, 71, 91, 112, 133, 153, 173, 193, 213], "conjug": [10, 31, 53, 72, 92, 113, 134, 154, 174, 194, 214], "diagon": [0, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "direct": 0, "dtype": [11, 32, 54, 73, 93, 114, 135, 155, 175, 195, 215], "factor": [33, 94, 115], "forward": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "get_attribut": [12, 34, 55, 74, 95, 116, 136, 156, 176, 196, 216], "indic": 224, "instal": 224, "is_hermitian": [13, 35, 56, 75, 96, 117, 137, 157, 177, 197, 217], "is_positive_definit": [14, 36, 57, 76, 97, 118, 138, 158, 178, 198, 218], "is_real": [15, 37, 58, 77, 98, 119, 139, 159, 179, 199, 219], "is_symmetr": [16, 38, 59, 78, 99, 120, 140, 160, 180, 200, 220], "iter": 0, "kwarg": [141, 161, 181], "lower": [17, 79, 201], "maxit": 39, "mump": [83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 224], "n_thread": 121, "order": 100, "pardiso": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 224], "pymatsolv": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224], "rtol": 40, "shape": [18, 41, 60, 80, 101, 122, 142, 162, 182, 202, 221], "solv": [19, 42, 61, 81, 102, 123, 143, 163, 183, 203, 222], "solver": [0, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224], "solvercg": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "solverlu": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "t": [3, 23, 46, 65, 85, 106, 127, 147, 167, 187, 207], "tabl": 224, "transpos": [20, 43, 62, 82, 103, 124, 144, 164, 184, 204, 223], "triangl": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "triangular": 0}})